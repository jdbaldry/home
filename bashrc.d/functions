#!/bin/bash
# Bash functions

# ssh_agent starts a new ssh agent and updates the file determined by the
# SSH_ENV environment variable
function ssh_agent() {
    printf "Initialising new SSH agent..."
    ssh-agent | sed 's/^echo/#echo/' >"${SSH_ENV}"
    printf "succeeded\n"
    chmod 600 "${SSH_ENV}"
    . "${SSH_ENV}" >/dev/null
}

# pomodoro creates a pomodoro timer for 25 minutes and then notifies the user
# once the timer has finished
function pomodoro() {
    thyme && zenity --warning --text "Take a break!"
}

# go_do changes to a directory to run a command and returns to the PWD afterwards.
function go_do() {
    cd $1
    ${@:2}
    cd -
}

# jqc prints JSON in color using a pager.
function jqc() {
    set -o pipefail
    jq -C "${@}" | less -R
}

# xcc copies the command and output to the clipboard for sharing.
# For example, to re-run the previous command and capture its output:
#   do_thing
#   xcc '!!'
#
# Clipboard will have:
# $ do thing
#
# <output>
function xcc() {
    local cmd
    cmd="${@}"
    {
        printf "$ %s\n\n" "${cmd}"
        eval "${cmd}" | sed 's/\x1b\[[0-9;]*m//g'
    } 2>&1 | tee /dev/tty | xc
}

# jqf uses fzf --preview to allow interactive manipulation of JSON with jq.
function jqf() {
    local file=$1
    echo '' | fzf --print-query --preview "cat ${file} | jq {q}"
}
